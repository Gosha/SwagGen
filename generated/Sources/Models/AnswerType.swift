//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class AnswerType: APIModel {

    public var freeTextAnswer: Message?

    public var multiChoiceAnswer: [String]?

    public var no: Bool?

    public var singleChoiceAnswer: String?

    public var yes: Bool?

    public init(freeTextAnswer: Message? = nil, multiChoiceAnswer: [String]? = nil, no: Bool? = nil, singleChoiceAnswer: String? = nil, yes: Bool? = nil) {
        self.freeTextAnswer = freeTextAnswer
        self.multiChoiceAnswer = multiChoiceAnswer
        self.no = no
        self.singleChoiceAnswer = singleChoiceAnswer
        self.yes = yes
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        freeTextAnswer = try container.decodeIfPresent("FreeTextAnswer")
        multiChoiceAnswer = try container.decodeArrayIfPresent("MultiChoiceAnswer")
        no = try container.decodeIfPresent("No")
        singleChoiceAnswer = try container.decodeIfPresent("SingleChoiceAnswer")
        yes = try container.decodeIfPresent("Yes")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(freeTextAnswer, forKey: "FreeTextAnswer")
        try container.encodeIfPresent(multiChoiceAnswer, forKey: "MultiChoiceAnswer")
        try container.encodeIfPresent(no, forKey: "No")
        try container.encodeIfPresent(singleChoiceAnswer, forKey: "SingleChoiceAnswer")
        try container.encodeIfPresent(yes, forKey: "Yes")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? AnswerType else { return false }
      guard self.freeTextAnswer == object.freeTextAnswer else { return false }
      guard self.multiChoiceAnswer == object.multiChoiceAnswer else { return false }
      guard self.no == object.no else { return false }
      guard self.singleChoiceAnswer == object.singleChoiceAnswer else { return false }
      guard self.yes == object.yes else { return false }
      return true
    }

    public static func == (lhs: AnswerType, rhs: AnswerType) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
