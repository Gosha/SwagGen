//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class Event: APIModel {

    public var eventId: String

    public var created: UTCTime

    public var author: String

    public var task: EventTask

    public init(eventId: String, created: UTCTime, author: String, task: EventTask) {
        self.eventId = eventId
        self.created = created
        self.author = author
        self.task = task
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        eventId = try container.decode("eventId")
        created = try container.decode("created")
        author = try container.decode("author")
        task = try container.decode("task")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(eventId, forKey: "eventId")
        try container.encode(created, forKey: "created")
        try container.encode(author, forKey: "author")
        try container.encode(task, forKey: "task")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? Event else { return false }
      guard self.eventId == object.eventId else { return false }
      guard self.created == object.created else { return false }
      guard self.author == object.author else { return false }
      guard self.task == object.task else { return false }
      return true
    }

    public static func == (lhs: Event, rhs: Event) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
