//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class Errand: APIModel {

    public var errandId: String

    public var created: UTCTime

    public var customerId: String

    public var events: [Event]

    public init(errandId: String, created: UTCTime, customerId: String, events: [Event]) {
        self.errandId = errandId
        self.created = created
        self.customerId = customerId
        self.events = events
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        errandId = try container.decode("errandId")
        created = try container.decode("created")
        customerId = try container.decode("customerId")
        events = try container.decodeArray("events")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(errandId, forKey: "errandId")
        try container.encode(created, forKey: "created")
        try container.encode(customerId, forKey: "customerId")
        try container.encode(events, forKey: "events")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? Errand else { return false }
      guard self.errandId == object.errandId else { return false }
      guard self.created == object.created else { return false }
      guard self.customerId == object.customerId else { return false }
      guard self.events == object.events else { return false }
      return true
    }

    public static func == (lhs: Errand, rhs: Errand) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
