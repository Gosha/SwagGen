//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class Booking: APIModel {

    public var bookingId: String

    public var message: Message

    public var timeOptions: [UTCTime]

    public var location: PlaceInfo?

    public init(bookingId: String, message: Message, timeOptions: [UTCTime], location: PlaceInfo? = nil) {
        self.bookingId = bookingId
        self.message = message
        self.timeOptions = timeOptions
        self.location = location
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        bookingId = try container.decode("bookingId")
        message = try container.decode("message")
        timeOptions = try container.decodeArray("timeOptions")
        location = try container.decodeIfPresent("location")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(bookingId, forKey: "bookingId")
        try container.encode(message, forKey: "message")
        try container.encode(timeOptions, forKey: "timeOptions")
        try container.encodeIfPresent(location, forKey: "location")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? Booking else { return false }
      guard self.bookingId == object.bookingId else { return false }
      guard self.message == object.message else { return false }
      guard self.timeOptions == object.timeOptions else { return false }
      guard self.location == object.location else { return false }
      return true
    }

    public static func == (lhs: Booking, rhs: Booking) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
