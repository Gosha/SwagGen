//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class Message: APIModel {

    public var messageId: String

    public var title: String

    public var message: String

    public var media: [String]

    public init(messageId: String, title: String, message: String, media: [String]) {
        self.messageId = messageId
        self.title = title
        self.message = message
        self.media = media
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        messageId = try container.decode("messageId")
        title = try container.decode("title")
        message = try container.decode("message")
        media = try container.decodeArray("media")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(messageId, forKey: "messageId")
        try container.encode(title, forKey: "title")
        try container.encode(message, forKey: "message")
        try container.encode(media, forKey: "media")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? Message else { return false }
      guard self.messageId == object.messageId else { return false }
      guard self.title == object.title else { return false }
      guard self.message == object.message else { return false }
      guard self.media == object.media else { return false }
      return true
    }

    public static func == (lhs: Message, rhs: Message) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
