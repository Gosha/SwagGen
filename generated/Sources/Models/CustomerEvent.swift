//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class CustomerEvent: APIModel {

    public var customerEventId: String

    public var created: UTCTime

    public var task: CustomerTask

    public init(customerEventId: String, created: UTCTime, task: CustomerTask) {
        self.customerEventId = customerEventId
        self.created = created
        self.task = task
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        customerEventId = try container.decode("customerEventId")
        created = try container.decode("created")
        task = try container.decode("task")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(customerEventId, forKey: "customerEventId")
        try container.encode(created, forKey: "created")
        try container.encode(task, forKey: "task")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? CustomerEvent else { return false }
      guard self.customerEventId == object.customerEventId else { return false }
      guard self.created == object.created else { return false }
      guard self.task == object.task else { return false }
      return true
    }

    public static func == (lhs: CustomerEvent, rhs: CustomerEvent) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
